name: Version Release

on:
  push:
    branches:
      - main

env:
  GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

jobs:
  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.get_tag.outputs.latest_tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Import GPG Key  
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ env.GPG_PRIVATE_KEY }}
          passphrase: ${{ env.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Set Up Git
        run: |
          git config --global user.name "release-managers"
          git config --global user.email "devopsindo@gmail.com"
          git config --global commit.gpgSign true

      - name: Generate New Version and Update Changelog
        run: |
          npx standard-version --no-verify
          git push --follow-tags origin main

      - name: Get Latest Tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          echo "::set-output name=latest_tag::$latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: bump-version
    outputs:
      release_notes: ${{ steps.generate_notes.outputs.release_notes }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate Release Notes
        id: generate_notes
        run: |
          latest_tag="${{ needs.bump-version.outputs.latest_tag }}"
          # Generate release notes excluding merge commits
          previous_tag=$(git describe --tags --abbrev=0 HEAD^)
          release_notes=$(git log --no-merges --pretty=format:"* %s (%h)" $previous_tag..HEAD)
          if [ -z "$release_notes" ]; then
            release_notes="No changes since the last release."
          fi
          release_notes="${release_notes//'%'/'%25'}"
          release_notes="${release_notes//$'\n'/'%0A'}"
          release_notes="${release_notes//$'\r'/'%0D'}"
          echo "::set-output name=release_notes::$release_notes"
          echo "RELEASE_NOTES=$release_notes" >> $GITHUB_ENV
          echo "$release_notes"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.bump-version.outputs.latest_tag }}
          release_name: ${{ needs.bump-version.outputs.latest_tag }}
          body: |
            ## What's Changed
            ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false

  live-check:
    name: Live Check
    needs: create-release
    environment: live
    runs-on: ubuntu-latest
    steps:
      - name: Run live check
        run: echo 'Running live check'
